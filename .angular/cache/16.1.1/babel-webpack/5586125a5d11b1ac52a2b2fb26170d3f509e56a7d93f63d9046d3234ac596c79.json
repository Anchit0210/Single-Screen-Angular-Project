{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let PersonEditComponent = class PersonEditComponent {\n  constructor(route, personService) {\n    this.route = route;\n    this.personService = personService;\n  }\n  ngOnInit() {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    const person = this.personService.getPersonById(id);\n    if (person) {\n      this.person = person;\n    } else {\n      // Handle the case when the person is not found\n      // For example, you can navigate back to the person list view or display an error message\n    }\n  }\n  savePerson() {\n    this.personService.updatePerson(this.person);\n    // Implement the logic to navigate back to the person list view\n  }\n};\n\nPersonEditComponent = __decorate([Component({\n  selector: 'app-person-edit',\n  templateUrl: './person-edit.component.html',\n  styleUrls: ['./person-edit.component.css']\n})], PersonEditComponent);","map":{"version":3,"names":["Component","PersonEditComponent","constructor","route","personService","ngOnInit","id","Number","snapshot","paramMap","get","person","getPersonById","savePerson","updatePerson","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Web Dev Projects\\Right Doctor Angular Project 2\\people-management-app\\src\\app\\person-delete\\person-delete.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Person } from '../person.model';\nimport { PersonService } from '../person.service';\n\n@Component({\n  selector: 'app-person-edit',\n  templateUrl: './person-edit.component.html',\n  styleUrls: ['./person-edit.component.css']\n})\nexport class PersonEditComponent implements OnInit {\n  person!: Person;\n\n  constructor(private route: ActivatedRoute, private personService: PersonService) {}\n\n  ngOnInit() {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    const person = this.personService.getPersonById(id);\n  \n    if (person) {\n      this.person = person;\n    } else {\n      // Handle the case when the person is not found\n      // For example, you can navigate back to the person list view or display an error message\n    }\n  }\n\n  savePerson(): void {\n    this.personService.updatePerson(this.person);\n    // Implement the logic to navigate back to the person list view\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAG9BC,YAAoBC,KAAqB,EAAUC,aAA4B;IAA3D,KAAAD,KAAK,GAALA,KAAK;IAA0B,KAAAC,aAAa,GAAbA,aAAa;EAAkB;EAElFC,QAAQA,CAAA;IACN,MAAMC,EAAE,GAAGC,MAAM,CAAC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IACzD,MAAMC,MAAM,GAAG,IAAI,CAACP,aAAa,CAACQ,aAAa,CAACN,EAAE,CAAC;IAEnD,IAAIK,MAAM,EAAE;MACV,IAAI,CAACA,MAAM,GAAGA,MAAM;KACrB,MAAM;MACL;MACA;IAAA;EAEJ;EAEAE,UAAUA,CAAA;IACR,IAAI,CAACT,aAAa,CAACU,YAAY,CAAC,IAAI,CAACH,MAAM,CAAC;IAC5C;EACF;CACD;;AArBYV,mBAAmB,GAAAc,UAAA,EAL/Bf,SAAS,CAAC;EACTgB,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,C,EACWjB,mBAAmB,CAqB/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}