{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://example.com/api'; // Replace with your API base URL\n  }\n\n  getAllPeople() {\n    const url = `${this.baseUrl}/people`;\n    return this.http.get(url);\n  }\n  getPersonById(id) {\n    const url = `${this.baseUrl}/people/${id}`;\n    return this.http.get(url);\n  }\n  updatePerson(person) {\n    const url = `${this.baseUrl}/people/${person.id}`;\n    return this.http.put(url, person);\n  }\n  deletePerson(id) {\n    const url = `${this.baseUrl}/people/${id}`;\n    return this.http.delete(url);\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ApiService","constructor","http","baseUrl","getAllPeople","url","get","getPersonById","id","updatePerson","person","put","deletePerson","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Web Dev Projects\\Right Doctor Angular Project 2\\people-management-app\\src\\app\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Person } from './person.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  private baseUrl = 'https://example.com/api'; // Replace with your API base URL\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllPeople(): Observable<Person[]> {\r\n    const url = `${this.baseUrl}/people`;\r\n    return this.http.get<Person[]>(url);\r\n  }\r\n\r\n  getPersonById(id: number): Observable<Person> {\r\n    const url = `${this.baseUrl}/people/${id}`;\r\n    return this.http.get<Person>(url);\r\n  }\r\n\r\n  updatePerson(person: Person): Observable<Person> {\r\n    const url = `${this.baseUrl}/people/${person.id}`;\r\n    return this.http.put<Person>(url, person);\r\n  }\r\n\r\n  deletePerson(id: number): Observable<void> {\r\n    const url = `${this.baseUrl}/people/${id}`;\r\n    return this.http.delete<void>(url);\r\n  }\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,yBAAyB,CAAC,CAAC;EAEN;;EAEvCC,YAAYA,CAAA;IACV,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACF,OAAO,SAAS;IACpC,OAAO,IAAI,CAACD,IAAI,CAACI,GAAG,CAAWD,GAAG,CAAC;EACrC;EAEAE,aAAaA,CAACC,EAAU;IACtB,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACF,OAAO,WAAWK,EAAE,EAAE;IAC1C,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAASD,GAAG,CAAC;EACnC;EAEAI,YAAYA,CAACC,MAAc;IACzB,MAAML,GAAG,GAAG,GAAG,IAAI,CAACF,OAAO,WAAWO,MAAM,CAACF,EAAE,EAAE;IACjD,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAASN,GAAG,EAAEK,MAAM,CAAC;EAC3C;EAEAE,YAAYA,CAACJ,EAAU;IACrB,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACF,OAAO,WAAWK,EAAE,EAAE;IAC1C,OAAO,IAAI,CAACN,IAAI,CAACW,MAAM,CAAOR,GAAG,CAAC;EACpC;;AAvBWL,UAAU,C;mBAAVA,UAAU,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAVjB,UAAU,C;SAAVA,UAAU;EAAAkB,OAAA,EAAVlB,UAAU,CAAAmB,IAAA;EAAAC,UAAA,EAFT;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}