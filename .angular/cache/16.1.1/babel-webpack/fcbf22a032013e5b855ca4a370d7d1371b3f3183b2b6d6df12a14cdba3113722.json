{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class PersonService {\n  constructor() {\n    this.people = [];\n  }\n  getAllPeople() {\n    return this.people;\n  }\n  getPersonById(id) {\n    return this.people.find(person => person.id === id);\n  }\n  addPerson(person) {\n    this.people.push(person);\n  }\n  updatePerson(person) {\n    const index = this.people.findIndex(p => p.id === person.id);\n    if (index !== -1) {\n      this.people[index] = person;\n    }\n  }\n  deletePerson(id) {\n    const index = this.people.findIndex(person => person.id === id);\n    if (index !== -1) {\n      this.people.splice(index, 1);\n    }\n  }\n}\nPersonService.ɵfac = function PersonService_Factory(t) {\n  return new (t || PersonService)();\n};\nPersonService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PersonService,\n  factory: PersonService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["PersonService","constructor","people","getAllPeople","getPersonById","id","find","person","addPerson","push","updatePerson","index","findIndex","p","deletePerson","splice","factory","ɵfac","providedIn"],"sources":["D:\\Web Dev Projects\\Right Doctor Angular Project 2\\people-management-app\\src\\app\\person.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Person } from './person.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonService {\n  private people: Person[] = [];\n\n  constructor() { }\n\n  getAllPeople(): Person[] {\n    return this.people;\n  }\n\n  getPersonById(id: number): Person | undefined {\n    return this.people.find(person => person.id === id);\n  }\n\n  addPerson(person: Person): void {\n    this.people.push(person);\n  }\n\n  updatePerson(person: Person): void {\n    const index = this.people.findIndex(p => p.id === person.id);\n    if (index !== -1) {\n      this.people[index] = person;\n    }\n  }\n\n  deletePerson(id: number): void {\n    const index = this.people.findIndex(person => person.id === id);\n    if (index !== -1) {\n      this.people.splice(index, 1);\n    }\n  }\n}\n"],"mappings":";AAMA,OAAM,MAAOA,aAAa;EAGxBC,YAAA;IAFQ,KAAAC,MAAM,GAAa,EAAE;EAEb;EAEhBC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACD,MAAM;EACpB;EAEAE,aAAaA,CAACC,EAAU;IACtB,OAAO,IAAI,CAACH,MAAM,CAACI,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACF,EAAE,KAAKA,EAAE,CAAC;EACrD;EAEAG,SAASA,CAACD,MAAc;IACtB,IAAI,CAACL,MAAM,CAACO,IAAI,CAACF,MAAM,CAAC;EAC1B;EAEAG,YAAYA,CAACH,MAAc;IACzB,MAAMI,KAAK,GAAG,IAAI,CAACT,MAAM,CAACU,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACR,EAAE,KAAKE,MAAM,CAACF,EAAE,CAAC;IAC5D,IAAIM,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACT,MAAM,CAACS,KAAK,CAAC,GAAGJ,MAAM;;EAE/B;EAEAO,YAAYA,CAACT,EAAU;IACrB,MAAMM,KAAK,GAAG,IAAI,CAACT,MAAM,CAACU,SAAS,CAACL,MAAM,IAAIA,MAAM,CAACF,EAAE,KAAKA,EAAE,CAAC;IAC/D,IAAIM,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACT,MAAM,CAACa,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;;EAEhC;;AA7BWX,aAAa,C;mBAAbA,aAAa;AAAA;AAAbA,aAAa,C;SAAbA,aAAa;EAAAgB,OAAA,EAAbhB,aAAa,CAAAiB,IAAA;EAAAC,UAAA,EAFZ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}